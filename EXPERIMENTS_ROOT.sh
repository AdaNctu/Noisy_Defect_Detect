#!/usr/bin/env bash

KSDD_PATH="./datasets/KSDD/"
DAGM_PATH="./datasets/DAGM/"
STEEL_PATH="./datasets/STEEL/"
KSDD2_PATH="./datasets/KSDD2/"
PCB_PATH="./datasets/PCB/"

train_single()
{
    SAVE_IMAGES=$1;shift
    DATASET=$1; shift
    DATASET_PATH=$1; shift
    RUN_NAME=$1; shift
    RESULTS_PATH=$1; shift
    NUM_SEGMENTED=$1; shift

    EPOCHS=$1; shift
    LEARNING_RATE=$1; shift
    BATCH_SIZE=$1; shift
    WEIGHTED_SEG_LOSS=$1; shift
    WEIGHTED_DEFECT=$1; shift
    FREQUENCY_SAMPLING=$1; shift
    NUM_NOISY=$1; shift
    NOISY_TYPE=$1; shift
    TT=$1; shift
    AD=$1; shift
    COTRAIN=$1; shift
    DROP_RATE=$1; shift

    GPU=$1; shift

    if [ "$NUM_NOISY" -eq 0 ]
    then
      RUN_ARGS="--SAVE_IMAGES=$SAVE_IMAGES --DATASET_PATH=$DATASET_PATH --NUM_SEGMENTED=$NUM_SEGMENTED --RUN_NAME=$RUN_NAME --RESULTS_PATH=$RESULTS_PATH --DATASET=$DATASET --EPOCHS=$EPOCHS --LEARNING_RATE=$LEARNING_RATE --BATCH_SIZE=$BATCH_SIZE --WEIGHTED_SEG_LOSS=$WEIGHTED_SEG_LOSS --FREQUENCY_SAMPLING=$FREQUENCY_SAMPLING --VALIDATE=True --TT=$TT --AD=$AD --MEMORY_FIT=$BATCH_SIZE --WEIGHTED_DEFECT=$WEIGHTED_DEFECT --COTRAIN=$COTRAIN --DROP_RATE=$DROP_RATE"
    else
      RUN_ARGS="--SAVE_IMAGES=$SAVE_IMAGES --DATASET_PATH=$DATASET_PATH --NUM_SEGMENTED=$NUM_SEGMENTED --RUN_NAME=$RUN_NAME --RESULTS_PATH=$RESULTS_PATH --DATASET=$DATASET --EPOCHS=$EPOCHS --LEARNING_RATE=$LEARNING_RATE --BATCH_SIZE=$BATCH_SIZE --WEIGHTED_SEG_LOSS=$WEIGHTED_SEG_LOSS --FREQUENCY_SAMPLING=$FREQUENCY_SAMPLING --VALIDATE=True --NUM_NOISY=$NUM_NOISY --NOISY_TYPE=$NOISY_TYPE --TT=$TT --AD=$AD --MEMORY_FIT=$BATCH_SIZE --WEIGHTED_DEFECT=$WEIGHTED_DEFECT --COTRAIN=$COTRAIN --DROP_RATE=$DROP_RATE"
    
    fi
    
    LOG_REDIRECT=$RESULTS_PATH/$DATASET/$RUN_NAME/training_log.txt

    mkdir -p $RESULTS_PATH/$DATASET/$RUN_NAME/ && python -u train_net.py --GPU=$GPU $RUN_ARGS | /usr/bin/tee $LOG_REDIRECT


}

